apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion build_versions.target_sdk


    defaultConfig {
        minSdkVersion build_versions.min_sdk//rootProject.ext.app.minSdkVersion
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //buildToolsVersion = '28.0.3'

    kapt {
        generateStubs = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    api deps.support.app_compat
    api deps.support.core_ktx

    api deps.kotlin.stdlib
    api deps.kotlin.coroutines

    testImplementation deps.junit
    androidTestImplementation deps.testRunner
    androidTestImplementation deps.espressoCore

    api deps.lifecycle.extensions
    api deps.lifecycle.viewmodel_ktx
    api deps.lifecycle.java8
    kapt deps.lifecycle.compiler


//    api rootProject.ext.lifecycle_reactivestreams

    api deps.retrofit.runtime
//    api rootProject.ext.gson
    api deps.retrofit.gson
//    api rootProject.ext.okhttp3
    api deps.okhttp_logging_interceptor
    api deps.glide.runtime
    kapt deps.glide.compiler
    //            {
//        exclude group: "com.android.support"
//    }

//    api rootProject.ext.dagger2
//    kapt rootProject.ext.dagger2_compiler
//    api rootProject.ext.dagger2_android
//    api rootProject.ext.dagger2_android_support // if you use the support libraries
//    kapt rootProject.ext.dagger2_android_processor

    api deps.kodein.runtime
    api deps.kodein.framework

}
